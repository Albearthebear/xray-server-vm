worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format (optional)
    # log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    #                 '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log /var/log/nginx/access.log main;
    access_log off; # Turn off access logs for privacy if desired
    error_log /var/log/nginx/error.log warn;

    gzip on;

    # Define upstream for Xray backend
    upstream xray_backend {
        # Assumes xray container is reachable via hostname 'xray' on docker network
        # Or use internal IP:port if not using Docker DNS
        server 127.0.0.1:10000; # Listen port inside Xray config
        keepalive 32;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name prostoy-fitnes.xyz; # Your domain
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server block
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name prostoy-fitnes.xyz; # Your domain

        # TLS configuration
        ssl_certificate /etc/letsencrypt/live/prostoy-fitnes.xyz/fullchain.pem; # Path inside Nginx container
        ssl_certificate_key /etc/letsencrypt/live/prostoy-fitnes.xyz/privkey.pem; # Path inside Nginx container
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # Location for VLESS WebSocket
        location = /vl3ss-p4th-abcdef { # Your secret path!
            if ($http_upgrade != "websocket") { # Enforce WebSocket
                return 404;
            }
            proxy_pass http://xray_backend;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            # Increase timeouts for long connections
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Default location returns 404
        location / {
            return 404;
        }
    }
}